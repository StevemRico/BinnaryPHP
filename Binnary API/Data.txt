
https://www.npmjs.com/package/mysql#getting-the-id-of-an-inserted-row
https://www.npmjs.com/package/bcrypt
https://www.npmjs.com/package/body-parser#bodyparserjsonoptions
https://www.npmjs.com/package/multer
https://jwt.io/introduction
https://expressjs.com/es/api.html#express
https://rogerdudler.github.io/git-guide/index.es.html

echo "# Binnary" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/StevemRico/Binnary.git
git push -u origin main



const express = require('express');
const router = express.Router();

const connection  = require('../conection');

// GET
router.get('/', (req, res) => {
    connection.query('SELECT * FROM employee', (err, rows, fields) => {
    if(!err) {
      res.json(rows);
    } else {
      console.log(err);
    }
  });  
});

// GET Unique
router.get('/:id', (req, res) => {
  const { id } = req.params; 
  connection.query('SELECT * FROM employee WHERE id = ?', [id], (err, rows, fields) => {
    if (!err) {
      res.json(rows[0]);
    } else {
      console.log(err);
    }
  });
});

// DELETE 
router.delete('/:id', (req, res) => {
  const { id } = req.params;
  connection.query('DELETE FROM employee WHERE id = ?', [id], (err, rows, fields) => {
    if(!err) {
      res.json({status: 'Employee Deleted'});
    } else {
      console.log(err);
    }
  });
});

// INSERT
router.post('/', (req, res) => {
  const {id, name, salary} = req.body;
  console.log(id, name, salary);
  const query = `
    SET @id = ?;
    SET @name = ?;
    SET @salary = ?;
    CALL employeeAddOrEdit(@id, @name, @salary);
  `;
  connection.query(query, [id, name, salary], (err, rows, fields) => {
    if(!err) {
      res.json({status: 'Employeed Saved'});
    } else {
      console.log(err);
    }
  });

});

// PUT

router.put('/:id', (req, res) => {
  const { name, salary } = req.body;
  const { id } = req.params;
  const query = `
    SET @id = ?;
    SET @name = ?;
    SET @salary = ?;
    CALL employeeAddOrEdit(@id, @name, @salary);
  `;
  connection.query(query, [id, name, salary], (err, rows, fields) => {
    if(!err) {
      res.json({status: 'Employee Updated'});
    } else {
      console.log(err);
    }
  });
});

module.exports = router;